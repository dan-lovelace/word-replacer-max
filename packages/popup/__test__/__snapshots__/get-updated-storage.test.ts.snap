// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getUpdatedStorage local area adds a single value when no other keys exist 1`] = `
{
  "local": {
    "recentSuggestions": {
      "apiResponseData": {
        "suggestions": [
          {
            "text": "lorem",
          },
        ],
        "tone": "neutral",
      },
      "identifier": "1234",
      "selectedTone": "neutral",
    },
  },
  "session": {},
  "sync": {},
}
`;

exports[`getUpdatedStorage local area adds a single value when other keys exist 1`] = `
{
  "local": {
    "lorem": "ipsum",
    "recentSuggestions": {
      "matcher__1234": {
        "apiResponseData": {
          "suggestions": [
            {
              "text": "lorem",
            },
          ],
          "tone": "neutral",
        },
        "identifier": "1234",
        "selectedTone": "neutral",
      },
    },
  },
  "session": {},
  "sync": {},
}
`;

exports[`getUpdatedStorage local area removes items when the new value is undefined 1`] = `
{
  "local": {},
  "session": {},
  "sync": {},
}
`;

exports[`getUpdatedStorage local area returns an unmodified copy of storage when no changes exist 1`] = `
{
  "local": {
    "recentSuggestions": {
      "matcher__1234": {
        "apiResponseData": {
          "suggestions": [
            {
              "text": "lorem",
            },
          ],
          "tone": "neutral",
        },
        "identifier": "1234",
        "selectedTone": "neutral",
      },
    },
  },
  "session": {},
  "sync": {},
}
`;

exports[`getUpdatedStorage local area updates an existing value 1`] = `
{
  "local": {
    "recentSuggestions": {
      "matcher__1234": {
        "apiResponseData": {
          "suggestions": [
            {
              "text": "lorem",
            },
          ],
          "tone": "neutral",
        },
        "identifier": "1234",
        "selectedTone": "casual",
      },
    },
  },
  "session": {},
  "sync": {},
}
`;

exports[`getUpdatedStorage multiple storage areas handles changes across all storage areas simultaneously 1`] = `
{
  "local": {
    "recentSuggestions": {
      "apiResponseData": {
        "suggestions": [
          {
            "text": "lorem",
          },
        ],
        "tone": "neutral",
      },
      "identifier": "4567",
      "selectedTone": "neutral",
    },
  },
  "session": {
    "authAccessToken": "ZZZZ",
    "authClockDrift": "10",
    "authIdToken": "XXXX",
    "authLastAuthUser": "test@wordreplacermax.com",
    "authRefreshToken": "XXXX",
  },
  "sync": {
    "matcher__1234": {
      "active": true,
      "identifier": "matcher__1234",
      "queries": [
        "lorem",
      ],
      "queryPatterns": [],
      "replacement": "sit",
    },
    "matcher__4567": {
      "active": true,
      "identifier": "matcher__4567",
      "queries": [
        "dolor",
      ],
      "queryPatterns": [],
      "replacement": "ipsum",
    },
  },
}
`;

exports[`getUpdatedStorage multiple storage areas handles complex matcher updates while modifying other storage areas 1`] = `
{
  "local": {
    "recentSuggestions": {
      "apiResponseData": {
        "suggestions": [
          {
            "text": "lorem",
          },
        ],
        "tone": "neutral",
      },
      "identifier": "1234",
      "selectedTone": "professional",
    },
  },
  "session": {
    "authAccessToken": "XXXX",
    "authClockDrift": "10",
    "authIdToken": "XXXX",
    "authLastAuthUser": "test-changed@wordreplacermax.com",
    "authRefreshToken": "XXXX",
  },
  "sync": {
    "matcher__1234": {
      "active": false,
      "identifier": "matcher__1234",
      "queries": [
        "updated-lorem",
      ],
      "queryPatterns": [],
      "replacement": "sit",
    },
    "matcher__4567": {
      "active": true,
      "identifier": "matcher__4567",
      "queries": [
        "dolor",
      ],
      "queryPatterns": [],
      "replacement": "updated-ipsum",
    },
  },
}
`;

exports[`getUpdatedStorage multiple storage areas handles empty changes in some areas while updating others 1`] = `
{
  "local": {
    "recentSuggestions": {
      "matcher__1234": {
        "apiResponseData": {
          "suggestions": [
            {
              "text": "lorem",
            },
          ],
          "tone": "neutral",
        },
        "identifier": "1234",
        "selectedTone": "neutral",
      },
    },
  },
  "session": {
    "authAccessToken": "ZZZZ",
    "authClockDrift": "10",
    "authIdToken": "XXXX",
    "authLastAuthUser": "test@wordreplacermax.com",
    "authRefreshToken": "XXXX",
  },
  "sync": {
    "matcher__1234": {
      "active": true,
      "identifier": "matcher__1234",
      "queries": [
        "lorem",
      ],
      "queryPatterns": [],
      "replacement": "sit",
    },
  },
}
`;

exports[`getUpdatedStorage multiple storage areas handles multiple changes within each storage area 1`] = `
{
  "local": {
    "new-local-key": "new-value",
  },
  "session": {
    "authAccessToken": "ZZZZ",
    "authClockDrift": "10",
    "authLastAuthUser": "test@wordreplacermax.com",
    "authRefreshToken": "XXXX",
    "newSessionKey": "session-value",
  },
  "sync": {
    "matcher__4567": {
      "active": true,
      "identifier": "matcher__4567",
      "queries": [
        "dolor",
      ],
      "queryPatterns": [],
      "replacement": "ipsum",
    },
    "storageVersion": "2.0.0",
  },
}
`;

exports[`getUpdatedStorage session area adds a single value when no other keys exist 1`] = `
{
  "local": {},
  "session": {
    "authAccessToken": "YYYY",
  },
  "sync": {},
}
`;

exports[`getUpdatedStorage session area adds a single value when other keys exist 1`] = `
{
  "local": {},
  "session": {
    "authAccessToken": "XXXX",
    "authClockDrift": "10",
    "authIdToken": "XXXX",
    "authLastAuthUser": "test@wordreplacermax.com",
    "authRefreshToken": "XXXX",
    "lorem": "ipsum",
  },
  "sync": {},
}
`;

exports[`getUpdatedStorage session area removes items when the new value is undefined 1`] = `
{
  "local": {},
  "session": {
    "authClockDrift": "10",
    "authIdToken": "XXXX",
    "authLastAuthUser": "test@wordreplacermax.com",
    "authRefreshToken": "XXXX",
  },
  "sync": {},
}
`;

exports[`getUpdatedStorage session area returns an unmodified copy of storage when no changes exist 1`] = `
{
  "local": {},
  "session": {
    "authAccessToken": "XXXX",
    "authClockDrift": "10",
    "authIdToken": "XXXX",
    "authLastAuthUser": "test@wordreplacermax.com",
    "authRefreshToken": "XXXX",
  },
  "sync": {},
}
`;

exports[`getUpdatedStorage session area updates an existing value 1`] = `
{
  "local": {},
  "session": {
    "authAccessToken": "YYYY",
    "authClockDrift": "10",
    "authIdToken": "XXXX",
    "authLastAuthUser": "test@wordreplacermax.com",
    "authRefreshToken": "XXXX",
  },
  "sync": {},
}
`;

exports[`getUpdatedStorage sync area matcher changes adds a single value when no other keys exist 1`] = `
{
  "local": {},
  "session": {},
  "sync": {
    "matcher__1234": {
      "active": true,
      "identifier": "matcher__1234",
      "queries": [
        "lorem",
      ],
      "queryPatterns": [],
      "replacement": "sit",
    },
  },
}
`;

exports[`getUpdatedStorage sync area matcher changes adds a single value when other keys exist 1`] = `
{
  "local": {},
  "session": {},
  "sync": {
    "matcher__1234": {
      "active": true,
      "identifier": "matcher__1234",
      "queries": [
        "lorem",
      ],
      "queryPatterns": [],
      "replacement": "sit",
    },
    "matcher__4567": {
      "active": true,
      "identifier": "matcher__4567",
      "queries": [
        "dolor",
      ],
      "queryPatterns": [],
      "replacement": "ipsum",
    },
  },
}
`;

exports[`getUpdatedStorage sync area matcher changes removes items when the new value is undefined 1`] = `
{
  "local": {},
  "session": {},
  "sync": {},
}
`;

exports[`getUpdatedStorage sync area matcher changes returns an unmodified copy of storage when no changes exist 1`] = `
{
  "local": {},
  "session": {},
  "sync": {
    "matcher__1234": {
      "active": true,
      "identifier": "matcher__1234",
      "queries": [
        "lorem",
      ],
      "queryPatterns": [],
      "replacement": "sit",
    },
    "matcher__4567": {
      "active": true,
      "identifier": "matcher__4567",
      "queries": [
        "dolor",
      ],
      "queryPatterns": [],
      "replacement": "ipsum",
    },
  },
}
`;

exports[`getUpdatedStorage sync area matcher changes updates an existing value 1`] = `
{
  "local": {},
  "session": {},
  "sync": {
    "matcher__1234": {
      "active": false,
      "identifier": "matcher__1234",
      "queries": [
        "lorem",
      ],
      "queryPatterns": [],
      "replacement": "sit",
    },
  },
}
`;

exports[`getUpdatedStorage sync area non-matcher changes adds a single value when no other keys exist 1`] = `
{
  "local": {},
  "session": {},
  "sync": {
    "storageVersion": "1.1.1",
  },
}
`;

exports[`getUpdatedStorage sync area non-matcher changes adds a single value when other keys exist 1`] = `
{
  "local": {},
  "session": {},
  "sync": {
    "lorem": "ipsum",
    "storageVersion": "1.0.0",
  },
}
`;

exports[`getUpdatedStorage sync area non-matcher changes removes items when the new value is undefined 1`] = `
{
  "local": {},
  "session": {},
  "sync": {},
}
`;

exports[`getUpdatedStorage sync area non-matcher changes returns an unmodified copy of storage when no changes exist 1`] = `
{
  "local": {},
  "session": {},
  "sync": {
    "storageVersion": "1.0.0",
  },
}
`;

exports[`getUpdatedStorage sync area non-matcher changes updates an existing value 1`] = `
{
  "local": {},
  "session": {},
  "sync": {
    "storageVersion": "1.1.1",
  },
}
`;
